Printing in python$-$In c++ you would use " cout << ". in python you would use?$-$print$-$out$-$printf$-$writeline$-$In phyton you use print and after it parentheses.
Inside the parentheses you can pass arguements separated by a comma
or without arguements so it will just produce an invisible newline character.
$$$User input in python$-$In c++ you would use " cin >> ". in python you would use?$-$input$-$read$-$scanf$-$readline$-$We use " input() " to get user input in python.
You can insert a string as arguement,
Which will be shown as a prompt: " input("Enter input:") ".
$$$For Loop  in python$-$In c++ you would use " for(i = 0; i <= n; i++) ".
In python you would use?$-$for i in range(n)$-$for(i = 0; i <= n; i++)$-$for (i FROM 0 TO n)$-$foreach (val i in Array)$-$To iterate over a series of items For loops use the range function.
The range function returns a new list with numbers of that specified range based on the length of the sequence.
$$$While Loop  in python$-$In c++ you would use " while(condition){expression} ". in python you would use?$-$while condition:
expression$-$while (condition)
expression$-$while (condition):
expression$-$while condition:
{expression}$-$The syntax of the while loop is very similar to the if statement, as you can see in the right answer.
$$$Functions  in python$-$In c++ you would use \"return_type function_name( parameter list ){body of the function}\". in python you would use?$-$def function_name ( parameter list ):
body of the function$-$def function_name ( parameter list ):
{body of the function}$-$def function_name ( parameter list )
{body of the function}$-$function_name ( parameter list )
{body of the function}$-$In phyton we use the def keyword and it doesnt have return_type
$$$Array in python$-$In c++ you would use "type array [N];" ,in python you would use?$-$array = [item 1,item 2,... item N]$-$type array = [N]$-$type array [N]$-$type array=new (N)$-$Python does not have built-in support for Arrays, but Python Lists can be used instead as the right answer.
$$$Inheritance in python$-$In c++ you would use "class subclass_name : access_mode base_class_name".
In python you would use?$-$class subclass_name(base_class_name):$-$class subclass_name(access_mode base_class_name):$-$class subclass_name : access_mode base_class_name$-$class subclass_name : base_class_name$-$
In python we dont use access mode in the declaration of derived class